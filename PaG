//Conversion txt a matrices
clear all
xdel(winsid())
clc
    //El txt. contendra los datos de cada variable en una columna, cada columna
    //separada por una tabulacion. Decimales separados por punto. Ninguna
    //linea vacia y ningun texto permitidos.
    //Cambiar variables indicadas por *

//*Direccion de los archivos, incluir '.txt'
    //Abrir el explorador de archivos de Scilab en la carpeta contenedora de los
        //.txt y el .sce, o escribir la direccion completa del archivo.
        //Si no hay segunda tabla, dejar el valor a 0
tabla1 = 'medidas1_2.txt';
tabla2 = 'medidas2.txt';

// Conversion medidas a matrices
m1 = fscanfMat(tabla1);
if tabla2 ~= 0 then
    m2 = fscanfMat(tabla2);
end

// Escala de tiempo: Tm = 0.5s, nº medidas = 492
Tm = 0.5;           //*Tiempo de muestreo

tmax1 = max(size(m1))/2 - 0.5;  //Numero de medidas
t1 = 0:Tm:tmax1;    //Escala de tiempos grafica 1

if tabla2 ~= 0 then
    tmax2 = max(size(m2))/2 - 0.5;  //Numero de medidas
    t2 = 0:Tm:tmax2;    //Escala de tiempos grafica 2
end

//Caracterizacion
    //Puntos maximo
max1 = [max(m1(:,1)),max(m1(:,2)),max(m1(:,3))];
min1 = [min(m1(:,1)),min(m1(:,2)),min(m1(:,3))];
max2 = [max(m2(:,1)),max(m2(:,2)),max(m2(:,3))];
min2 = [min(m2(:,1)),min(m2(:,2)),min(m2(:,3))];

//Graficas
    //*¿Unir puntos con lineas? 1/0
lineas = 1;
    //*¿Puntos huecos? 1/0
hueco = 1;
    //*¿Solo lineas? 1/0
no_h = 1;
    //*¿Cuadricula? 1/0
cuad = 0;
    //*¿Blanco y negro? 1/0 (cambia los punteros de cada variable para poder
    //distinguir en papel impreso)
byn = 1;

    //Numero de columnas por grafica
ncol_1 = min(size(m1));
if tabla2 ~= 0 then
    ncol_2 = min(size(m2));
end

    //*Nombres de las variables, titulos y ejes por tabla (que coincidan con ncol_#)
Tit_1 = 'Medidas1';
Nom_1 = ['RTD 4-term','Termopar varilla','RTD 3-term'];
x_1 = 't (s)';
y_1 = 'T (ºC)';
if tabla2 ~= 0 then
    Tit_2 = 'Medidas2';
    Nom_2 = ['RTD 4-term','Termopar varilla','Termopar 2'];
    x_2 = 't (s)';
    y_2 = 'T (ºC)';
end

    //Colores de cada variable
col = ['r','g','b'];
    //Estilos de los punteros
sty = [9,2,6,11,10,14,1,7,0,5];

frmt = '.';
if hueco then
    frmt = 'o';
end
if lineas then
    frmt = strcat(['-',frmt]);
end

rpta1 = [];         //Valores de la respuesta cuando t=tau
rpta2 = [];
tau1 = [0,0,0];     //Valores de la constante tau
tau2 = [0,0,0];

figure('BackgroundColor',[1 1 1]);
for i=1:ncol_1
    TOL = 0.05;          //Valor de tolerancia de error entre f(tau) y rpta
    //Calculo de respuesta a t=tau
    rpta1(i) = (min1(i)-(min1(i)-max1(i))*0.63);
    while tau1(i)==0
        temp = [];
        for v=1:120
            if abs(m1(v,i)-rpta1(i))<=TOL then
                temp(size(temp)+1) = v*Tm;
            end
        end
        
        for x=1:max(size(temp))
            tau1(i) = tau1(i) + temp(x);
        end
        if max(size(temp))~=0 then
            tau1(i) = tau1(i)/max(size(temp))/2;
        end
        TOL = TOL + 0.05;
    end
    
    //Grafica
    if no_h & byn then
        frmt = linea(i);
        col(i) = 'k';
    end
    plot(t1/2,m1(:,i)',strcat([col(i),frmt]));
    h = get("hdl");
    h = h.children;
    h.mark_size=4;
    if byn then
        h.mark_style=sty(i);
    end
    if no_h then
        h.mark_mode = 'off';
        h.thickness = 2;
    end
end

legend(Nom_1,2);

//plot(t1/2,60*ones(t1),'k');
//legend(Nom_1,'Ref');

a = get('current_axes');
a.font_size = 3;
a.x_label.font_size = 3;
a.y_label.font_size = 3;
if byn then
    c1 = a.children(2).children(1);
    c2 = a.children(3).children(1);
    c3 = a.children(4).children(1);
    c1.thickness = 2;
    c2.thickness = 2;
    c3.thickness = 2;
end

for i=1:ncol_1
    plot(1:Tm:tau1(i),rpta1(i)*ones(1:Tm:tau1(i)),strcat([col(i),linea(i)]));
    plot([tau1(i),tau1(i)],[20,rpta1(i)],strcat([col(i),linea(i)]));
end

if cuad then
    xgrid;
end

xtitle(Tit_1,x_1,y_1);
title(Tit_1,'font_size',4,'font_style',4);

if tabla2 ~= 0 then
    rpta2 = [];
    figure('BackgroundColor',[1 1 1]);
    for i=1:ncol_2
        TOL = 0.05;          //Valor de tolerancia de error entre f(tau) y rpta
        //Calculo de respuesta a t=tau
        rpta2(i) = (min2(i)-(min2(i)-max2(i))*0.63);
        while tau2(i)==0
            temp = [];
            for v=1:120
                if abs(m2(v,i)-rpta2(i))<=TOL then
                    temp(size(temp)+1) = v*Tm;
                end
            end
            
            for x=1:max(size(temp))
                tau2(i) = tau2(i) + temp(x);
            end
            if max(size(temp))~=0 then
                tau2(i) = tau2(i)/max(size(temp))/2;
            end
            TOL = TOL + 0.05;
        end
        
        //Grafica
        
        if no_h & byn then
            frmt = linea(i);
            col(i) = 'k';
        end
        plot(t2/2,m2(:,i)',strcat([col(i),frmt]));
        h = get("hdl");
        h = h.children;
        h.mark_size=4;
        if byn then
            h.mark_style=sty(i);
        end
        if no_h then
            h.mark_mode = 'off';
        end
    end

    legend(Nom_2,2);


//    plot(t2/2,60*ones(t2),'k');
//    legend(Nom_2,'Ref');


    if cuad then
        xgrid;
    end

    a = get('current_axes');
    a.font_size = 3;
    a.x_label.font_size = 3;
    a.y_label.font_size = 3;
    if byn then
        c1 = a.children(2).children(1);
        c2 = a.children(3).children(1);
        c3 = a.children(4).children(1);
        c1.thickness = 2;
        c2.thickness = 2;
        c3.thickness = 2;
    end

    xtitle(Tit_2,x_2,y_2);
    title(Tit_2,'font_size',4,'font_style',4);
end

for i=1:ncol_2
    plot(1:Tm:tau2(i),rpta2(i)*ones(1:Tm:tau2(i)),strcat([col(i),linea(i)]));
    plot([tau2(i),tau2(i)],[20,rpta2(i)],strcat([col(i),linea(i)]));
end
